{"ast":null,"code":"var _jsxFileName = \"/Users/thomasmacfarlaine/z-projects/animation-suite/src/containers/SpringPlayground/SpringTrailBalls/index.tsx\";\nimport React, { useState } from 'react';\nimport { useTrail, animated } from 'react-spring';\nimport { Button } from '../../../components/button';\nimport { Box } from '../../../components/containers/styles';\nexport const SpringTrailBalls = () => {\n  const [show, setShow] = useState(false);\n  const colors = ['red', 'green', 'blue', 'orange', 'purple', 'yellow'];\n  const trailSprings = useTrail(colors.length, {\n    from: {\n      opacity: 0,\n      transform: 'translateY(0)'\n    },\n    to: {\n      opacity: show ? 1 : 0,\n      transform: 'translateY(100px)'\n    }\n  });\n  return /*#__PURE__*/React.createElement(Box, {\n    border: 2,\n    contentFit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, trailSprings.map((spring, index) => /*#__PURE__*/React.createElement(animated.div, {\n    key: colors[index],\n    style: { ...spring,\n      width: '20px',\n      height: '20px',\n      borderRadius: '50%',\n      marginRight: '10px',\n      transformOrigin: 'bottom',\n      backgroundColor: colors[index]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setShow(!show),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Press me\"));\n};","map":{"version":3,"sources":["/Users/thomasmacfarlaine/z-projects/animation-suite/src/containers/SpringPlayground/SpringTrailBalls/index.tsx"],"names":["React","useState","useTrail","animated","Button","Box","SpringTrailBalls","show","setShow","colors","trailSprings","length","from","opacity","transform","to","display","alignItems","map","spring","index","width","height","borderRadius","marginRight","transformOrigin","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,cAAnC;AACA,SAASC,MAAT,QAAuB,4BAAvB;AAEA,SAASC,GAAT,QAAoB,uCAApB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAMQ,MAAM,GAAG,CAAC,KAAD,EAAQ,OAAR,EAAiB,MAAjB,EAAyB,QAAzB,EAAmC,QAAnC,EAA6C,QAA7C,CAAf;AAEA,QAAMC,YAAY,GAAGR,QAAQ,CAACO,MAAM,CAACE,MAAR,EAAgB;AAC3CC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,SAAS,EAAE;AAAzB,KADqC;AAE3CC,IAAAA,EAAE,EAAE;AAAEF,MAAAA,OAAO,EAAEN,IAAI,GAAG,CAAH,GAAO,CAAtB;AAAyBO,MAAAA,SAAS,EAAE;AAApC;AAFuC,GAAhB,CAA7B;AAKA,sBACE,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAb;AAAgB,IAAA,UAAU,EAAE,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,YAAY,CAACQ,GAAb,CAAiB,CAACC,MAAD,EAASC,KAAT,kBAChB,oBAAC,QAAD,CAAU,GAAV;AACE,IAAA,GAAG,EAAEX,MAAM,CAACW,KAAD,CADb;AAEE,IAAA,KAAK,EAAE,EACL,GAAGD,MADE;AAELE,MAAAA,KAAK,EAAE,MAFF;AAGLC,MAAAA,MAAM,EAAE,MAHH;AAILC,MAAAA,YAAY,EAAE,KAJT;AAKLC,MAAAA,WAAW,EAAE,MALR;AAMLC,MAAAA,eAAe,EAAE,QANZ;AAOLC,MAAAA,eAAe,EAAEjB,MAAM,CAACW,KAAD;AAPlB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,eAiBE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMZ,OAAO,CAAC,CAACD,IAAF,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,CADF;AAqBD,CA/BM","sourcesContent":["import React, { FC, useState } from 'react';\nimport { useTrail, animated } from 'react-spring';\nimport { Button } from '../../../components/button';\nimport { Space } from '../../../components/space';\nimport { Box } from '../../../components/containers/styles';\n\nexport const SpringTrailBalls = () => {\n  const [show, setShow] = useState(false);\n\n  const colors = ['red', 'green', 'blue', 'orange', 'purple', 'yellow'];\n\n  const trailSprings = useTrail(colors.length, {\n    from: { opacity: 0, transform: 'translateY(0)' },\n    to: { opacity: show ? 1 : 0, transform: 'translateY(100px)' },\n  });\n\n  return (\n    <Box border={2} contentFit={true}>\n      <div style={{ display: 'flex', alignItems: 'flex-end' }}>\n        {trailSprings.map((spring, index) => (\n          <animated.div\n            key={colors[index]}\n            style={{\n              ...spring,\n              width: '20px',\n              height: '20px',\n              borderRadius: '50%',\n              marginRight: '10px',\n              transformOrigin: 'bottom',\n              backgroundColor: colors[index],\n            }}\n          />\n        ))}\n      </div>\n      <Button onClick={() => setShow(!show)}>Press me</Button>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}