{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { rootReducer } from './reducers';\nimport thunk from 'redux-thunk'; // Our initial collection of middlewares\n\nconst middlewares = [thunk]; // Add the redux logger if we're in development\n\nif (process.env.NODE_ENV === 'development') {\n  const {\n    logger\n  } = require('redux-logger');\n\n  middlewares.push(logger);\n} // Function to create the root store and apply the middlewares\n\n\nexport const setStore = () => {\n  return createStore(rootReducer, applyMiddleware(...middlewares));\n};","map":{"version":3,"sources":["/Users/thomasmacfarlaine/z-projects/pwa-spring-loaded/src/store/index.ts"],"names":["createStore","applyMiddleware","rootReducer","thunk","middlewares","process","env","NODE_ENV","logger","require","push","setStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,MAAMC,WAAW,GAAG,CAACD,KAAD,CAApB,C,CAEA;;AACA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAaC,OAAO,CAAC,cAAD,CAA1B;;AACAL,EAAAA,WAAW,CAACM,IAAZ,CAAiBF,MAAjB;AACD,C,CAED;;;AACA,OAAO,MAAMG,QAAQ,GAAG,MAAM;AAC5B,SAAOX,WAAW,CAACE,WAAD,EAAcD,eAAe,CAAC,GAAGG,WAAJ,CAA7B,CAAlB;AACD,CAFM","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { rootReducer } from './reducers';\nimport thunk from 'redux-thunk';\n\n// Our initial collection of middlewares\nconst middlewares = [thunk];\n\n// Add the redux logger if we're in development\nif (process.env.NODE_ENV === 'development') {\n  const { logger } = require('redux-logger');\n  middlewares.push(logger);\n}\n\n// Function to create the root store and apply the middlewares\nexport const setStore = () => {\n  return createStore(rootReducer, applyMiddleware(...middlewares));\n};\n"]},"metadata":{},"sourceType":"module"}