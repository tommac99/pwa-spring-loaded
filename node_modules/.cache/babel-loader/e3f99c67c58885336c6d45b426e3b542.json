{"ast":null,"code":"var _jsxFileName = \"/Users/thomasmacfarlaine/z-projects/pwa-spring-loaded/src/containers/SpringPlayground/SpringTrailBar/index.tsx\";\nimport React, { useState } from 'react';\nimport { useTrail, animated } from 'react-spring';\nimport { Button } from '../../../components/button';\nimport { Box } from '../../../components/containers/styles';\nexport const SpringTrailBar = () => {\n  const [show, setShow] = useState(false);\n  const colors = ['red', 'green', 'blue', 'orange', 'purple', 'yellow'];\n  const trailSprings = useTrail(colors.length, {\n    from: {\n      height: '0px'\n    },\n    to: {\n      height: show ? '80px' : '0px'\n    }\n  }); // const spring = useSpring({\n  //   from: {\n  //     opacity: 0,\n  //     transform: `translate(0px)`,\n  //   },\n  //   to: {\n  //     opacity: 1,\n  //     transform: `translate(120px)`,\n  //   },\n  //   config: {\n  //     mass: 6,\n  //   },\n  // });\n\n  return /*#__PURE__*/React.createElement(Box, {\n    border: 2,\n    contentFit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, trailSprings.map((spring, index) => /*#__PURE__*/React.createElement(animated.div, {\n    key: colors[index],\n    style: { ...spring,\n      width: '20px',\n      marginRight: '10px',\n      transformOrigin: 'bottom',\n      backgroundColor: colors[index]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setShow(!show),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Press me\"));\n};","map":{"version":3,"sources":["/Users/thomasmacfarlaine/z-projects/pwa-spring-loaded/src/containers/SpringPlayground/SpringTrailBar/index.tsx"],"names":["React","useState","useTrail","animated","Button","Box","SpringTrailBar","show","setShow","colors","trailSprings","length","from","height","to","display","alignItems","map","spring","index","width","marginRight","transformOrigin","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,cAAnC;AACA,SAASC,MAAT,QAAuB,4BAAvB;AAEA,SAASC,GAAT,QAAoB,uCAApB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAMQ,MAAM,GAAG,CAAC,KAAD,EAAQ,OAAR,EAAiB,MAAjB,EAAyB,QAAzB,EAAmC,QAAnC,EAA6C,QAA7C,CAAf;AAEA,QAAMC,YAAY,GAAGR,QAAQ,CAACO,MAAM,CAACE,MAAR,EAAgB;AAC3CC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KADqC;AAE3CC,IAAAA,EAAE,EAAE;AAAED,MAAAA,MAAM,EAAEN,IAAI,GAAG,MAAH,GAAY;AAA1B;AAFuC,GAAhB,CAA7B,CALkC,CAUlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAb;AAAgB,IAAA,UAAU,EAAE,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAEQ,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,YAAY,CAACO,GAAb,CAAiB,CAACC,MAAD,EAASC,KAAT,kBAChB,oBAAC,QAAD,CAAU,GAAV;AACE,IAAA,GAAG,EAAEV,MAAM,CAACU,KAAD,CADb;AAEE,IAAA,KAAK,EAAE,EACL,GAAGD,MADE;AAELE,MAAAA,KAAK,EAAE,MAFF;AAGLC,MAAAA,WAAW,EAAE,MAHR;AAILC,MAAAA,eAAe,EAAE,QAJZ;AAKLC,MAAAA,eAAe,EAAEd,MAAM,CAACU,KAAD;AALlB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,eAeE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMX,OAAO,CAAC,CAACD,IAAF,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,CADF;AAmBD,CA3CM","sourcesContent":["import React, { FC, useState } from 'react';\nimport { useTrail, animated } from 'react-spring';\nimport { Button } from '../../../components/button';\nimport { Space } from '../../../components/space';\nimport { Box } from '../../../components/containers/styles';\n\nexport const SpringTrailBar = () => {\n  const [show, setShow] = useState(false);\n\n  const colors = ['red', 'green', 'blue', 'orange', 'purple', 'yellow'];\n\n  const trailSprings = useTrail(colors.length, {\n    from: { height: '0px' },\n    to: { height: show ? '80px' : '0px' },\n  });\n\n  // const spring = useSpring({\n  //   from: {\n  //     opacity: 0,\n  //     transform: `translate(0px)`,\n  //   },\n  //   to: {\n  //     opacity: 1,\n  //     transform: `translate(120px)`,\n  //   },\n  //   config: {\n  //     mass: 6,\n  //   },\n  // });\n\n  return (\n    <Box border={2} contentFit={true}>\n      <div style={{ display: 'flex', alignItems: 'flex-end' }}>\n        {trailSprings.map((spring, index) => (\n          <animated.div\n            key={colors[index]}\n            style={{\n              ...spring,\n              width: '20px',\n              marginRight: '10px',\n              transformOrigin: 'bottom',\n              backgroundColor: colors[index],\n            }}\n          />\n        ))}\n      </div>\n      <Button onClick={() => setShow(!show)}>Press me</Button>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}